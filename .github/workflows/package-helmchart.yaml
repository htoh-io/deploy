name: Package Helmchart 

on:
  workflow_call:
    inputs:
      app_name:
        required: true 
        type: string
      app_version:
        description: App version. If image is metabase/metabase:v0.43.4, then app_version = v0.43.4
        required: false
        type: string
    secrets:
      ACR_ENDPOINT:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true
    outputs:
      version: 
        description: "Package's version"
        value: ${{ jobs.package.outputs.version }}

jobs:
  package:
    name: Package Helm chart
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release_helm.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Authenticate with ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - id: setup_pack
        name: Setup Buildpack
        uses: buildpacks/github-actions/setup-pack@v4.4.0
      - id: release_docker
        if: ${{ inputs.app_version == null }}
        name: Release Docker image
        run: |
          image_name=${{ secrets.ACR_ENDPOINT }}/${{ inputs.app_name }}:${{ steps.tag.outputs.tag }}
          pack build $image_name --builder paketobuildpacks/builder:base
          docker push $image_name
      - name: Authenticate with Helm registry 
        run: |
          helm registry login ${{ secrets.ACR_ENDPOINT }} \
            --username ${{ secrets.ACR_USERNAME }} \
            --password ${{ secrets.ACR_PASSWORD }}
      - name: Checkout Helm templates repo
        uses: actions/checkout@v3
        with:
          repository: htoh-io/deploy
          path: deploy
      - id: release_helm
        name: Release Helm chart
        run: |
          ls -la          
          chart_version=${{ steps.tag.outputs.tag }} 
          if [ -z "${{ inputs.app_version }}" ]; then
            app_version=${{ steps.tag.outputs.tag }} 
          else
            app_version=${{ inputs.app_version }} 
          fi
          
          echo "Packaging for app_version=$app_version, chart_version=$chart_version"
          #helm package --app-version $app_version --version $chart_version ./helm

          #echo "Publishing"
          #helm push ${{ inputs.app_name }}-$chart_version.tgz oci://${{ secrets.ACR_ENDPOINT }}/helm
          
          echo "::set-output name=version::$chart_version" 